FIRST UNIQUE CHARACTER IN A STRING (JAVA):
class Solution {
    public int firstUniqChar(String s) {
      int[] freq = new int[256];
        for (int i = 0; i < s.length(); i++) 
    {
        if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') 
        {
            freq[s.charAt(i) - 'a']++;
        }
    }
        for (int i = 0; i < s.length(); i++) {
            if (freq[s.charAt(i) - 'a'] == 1) return i;
        }
        return -1;
        
    } 
}

VALID ANAGRAM (JAVA):
class Solution 
{
    public boolean isAnagram(String string1, String string2) 
    {
        if (string1.length() != string2.length()) 
        {
        return false;
        }
    char[] a1 = string1.toCharArray();
    char[] a2 = string2.toCharArray();
    Arrays.sort(a1);
    Arrays.sort(a2);
    return Arrays.equals(a1, a2);
    }
}
OR
class Solution {
    public boolean isAnagram(String s, String t) {
       int[] freq = new int[256];
        for (int i = 0; i < t.length(); i++) 
    {
            freq[t.charAt(i) - 'a']++;
    }
         int[] freq1 = new int[256];
        for (int i = 0; i < s.length(); i++) 
    {
            freq1[s.charAt(i) - 'a']++;
    }
        for(int i=0;i<26;i++)
        {  
            if(freq[i]!=freq1[i])
                return false;
        } return true; 
    }
}

RANSOM NOTE (JAVA):
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
   
     int[] arr = new int[26];
        for (int i = 0; i < magazine.length(); i++) {
            arr[magazine.charAt(i) - 'a']++;
        }
        for (int i = 0; i < ransomNote.length(); i++) {
            if(--arr[ransomNote.charAt(i)-'a'] < 0) {
                return false;
            }
        }
        return true;
    }
}
OR
class Solution {
    public boolean canConstruct(String ransomNote, String magazine) {
   
    int[] freq = new int[256];
        for (int i = 0; i < magazine.length(); i++) 
    {
            freq[magazine.charAt(i) - 'a']++;
    }
         int[] freq1 = new int[256];
        for (int i = 0; i < ransomNote.length(); i++) 
    {
            freq1[ransomNote.charAt(i) - 'a']++;
    }
        for(int i=0;i<26;i++)
        {  
            if(freq[i]<freq1[i])
                return false;
        } return true;
    }
}
